"use client";
import "./globals.css";
import { Inter } from "next/font/google";
import { useState, useEffect } from "react";
import { Modal, Label, Select, Button } from "flowbite-react";
const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  const [openModal, setOpenModal] = useState(undefined);
  const [selectedOption, setSelectedOption] = useState(15);

  const handleSelectChange = (event) => {
    setSelectedOption(event.target.value);
  };
  useEffect(() => {
    localStorage.setItem("selectedTimer", selectedOption);
  }, [selectedOption]);

  const handleSubmit = (event) => {
    event.preventDefault();
    setSelectedOption(event.target.value); //
  };

  const numbers = Array.from({ length: 60 }, (_, index) => index + 1);
  return (
    <html lang="en">
      <body className={inter.className}> {children} </body>
      <>
        <Button onClick={() => setOpenModal("pop-up")}>
          <svg
            class="w-6 h-6 dark:text-white"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4"
            ></path>
          </svg>
        </Button>
        <Modal
          show={openModal === "pop-up"}
          size="md"
          popup
          onClose={() => setOpenModal(undefined)}
        >
          <Modal.Header />
          <Modal.Body>
            <div className="text-center">
              <h3 className="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">
                타이머를 맞추세요
              </h3>
              <div className="max-w-md" id="select" onSubmit={handleSubmit}>
                <Select
                  id="seconds"
                  required
                  value={selectedOption}
                  onChange={handleSelectChange}
                >
                  {numbers.map((number) => (
                    <option key={number}>{number}</option>
                  ))}
                </Select>
              </div>
              <div className="flex justify-center gap-4">
                <Button color="gray" onClick={() => setOpenModal(undefined)}>
                  제출
                </Button>
              </div>
            </div>
          </Modal.Body>
        </Modal>
      </>
    </html>
  );
}
